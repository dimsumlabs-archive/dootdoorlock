#!/usr/bin/env python3
from threading import Timer
from dsldoor import create_server_socket
import argparse
import zmq


DOOR_PIN = 17
SOCK_PATH = '/tmp/doord'


class Door(object):

    def __init__(self, open_seconds=5):
        self.open_seconds = 5
        # Hack to run cancel without conditionals
        self.timer = Timer(0, lambda: None)

        filename = '/sys/class/gpio/gpio{pin}/value'.format(pin=DOOR_PIN)
        try:
            self._fd = open(filename, 'wb', buffering=0)
            print('Raspi open interface')
        except IOError as e:
            if e.errno == 2:
                self._fd = open('/dev/null', 'wb', buffering=0)
            else:
                raise

    def open(self):
        self._fd.write(b'1')

        self.timer.cancel()
        self.timer = Timer(self.open_seconds, self.close)
        self.timer.start()

        print('Opened door')

    def close(self):
        self._fd.write(b'0')
        print('Closed door')


if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='DSL door opening daemon')
    parser.parse_args()

    ctx, socket = create_server_socket(sock_path=SOCK_PATH)
    socket.setsockopt(zmq.SUBSCRIBE, b'OPEN')
    socket.setsockopt(zmq.SUBSCRIBE, b'CLOSE')

    door = Door()

    while True:
        evt = socket.recv().decode('utf8')

        if evt == 'OPEN':
            door.open()

        elif evt == 'CLOSE':
            door.close()
