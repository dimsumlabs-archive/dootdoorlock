#!/usr/bin/env python3
from threading import Timer
import RPi.GPIO as GPIO
import argparse
import zmq

from dsldoor import create_server_socket


DOOR_PIN = 17
SOCK_PATH = '/tmp/doord'


class Door(object):

    def __init__(self, open_seconds=5):
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(DOOR_PIN, GPIO.OUT)

        self.open_seconds = 5
        # Hack to run cancel without conditionals
        self.timer = Timer(0, lambda: None)

    def open(self):
        GPIO.output(DOOR_PIN, True)

        self.timer.cancel()
        self.timer = Timer(self.open_seconds, self.close)
        self.timer.start()

    def close(self):
        GPIO.output(DOOR_PIN, False)
        print('Closed door')


if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='DSL door opening daemon')
    parser.parse_args()

    ctx, socket = create_server_socket(sock_path=SOCK_PATH)
    socket.setsockopt(zmq.SUBSCRIBE, b'OPEN')
    socket.setsockopt(zmq.SUBSCRIBE, b'CLOSE')

    door = Door()

    while True:
        evt = socket.recv().decode('utf8')

        if evt == 'OPEN':
            door.open()

        elif evt == 'CLOSE':
            door.close()
